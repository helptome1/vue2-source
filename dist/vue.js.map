{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/watcher.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 获取 数组的原型\nlet oldArrayProto = Array.prototype;\n\n// 拷贝一份数组原型，修改数组方法，不会影响Array的方法。\nexport let newArrayProto = Object.create(oldArrayProto);\n\n// 这里是改变元素组的方法。\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  // arr.push([1,2,3])\n  newArrayProto[method] = function (...args) {\n    // 这里重写了数组的方法。\n    // 调用原型上的方法。\n    // 这里的this指向的是谁调用的，this指向arr\n    const result= oldArrayProto[method].call(this, ...args);\n    // 需要对新增的数据再次劫持。\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice':\n        inserted = args.slice(2)\n        break;\n      default:\n        break;\n    }\n    if(inserted) {\n      // 对新增的数组内容再次劫持\n      ob.observeArray(inserted)\n    }\n    return result\n  }\n})\n\n\n","import Dep from './dep'\n\nlet id = 0\n\n// 观察者，观察某个属性的变化。每个属性都有一个dep(被观察者)，watcher就是观察者。属性变化会通知观察者更新。\n// 1. 不同的组件有不同的watcher。 目前只有一个，渲染跟实例\nclass Watch {\n  constructor(vm, fn, options) {\n    this.id = id++\n    this.renderWatcher = options\n    this.getter = fn\n    this.dep = [] //后续实现计算属性，和一些清理工作时使用。记住dep\n    this.depsId = new Set()\n    this.get()\n  }\n\n  get() {\n    Dep.target = this // 静态属性就一份\n    this.getter() //回去vm上取值, vm._update(vm._render)\n    Dep.target = null\n  }\n\n  // 一个组件 对应着多个属性。重复的属性也不用记录。\n  addDep(dep) {\n    let id = dep.id\n    if (!this.depsId.has(id)) {\n      this.dep.push(id)\n      this.depsId.add(id)\n      dep.addSub(this) // watcher已经记住了dep，而且去重复了，可以让dep记住了watcher\n    }\n  }\n\n  // 更新视图\n  update() {\n    // this.get() //更新渲染\n    queueWatcher(this)\n  }\n\n  run() {\n    this.get() // 执行刷新\n  }\n}\n\n// 以下代码用来，更新数据的时候，等到最后修改完，只刷新一次节约性能。\nlet queue = []\nlet has = {}\nlet pending = false // 防抖\nfunction flushScheduleQueue() {\n  // 拷贝了一份。\n  let flushQueue = queue.slice(0)\n  // 清空队列\n  queue = []\n  has = {}\n  pending = false\n  // 在刷新的过程中，可能有新的wathcer，回重新放到queue中。\n  flushQueue.forEach((item) => {\n    item.run()\n  })\n}\n\nfunction queueWatcher(watcher) {\n  const id = watcher.id\n  if (!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    // 不管我们的update执行多少次，但是最终只执行一轮刷新操作。\n    if (!pending) {\n      setTimeout(flushScheduleQueue, 0)\n      pending = true\n    }\n  }\n}\n\n// nextTick并不是创建一个异步任务，而是将这个任务维护到了队列中去。\n// 使用p处理，解决多次使用nextTick只执行一次的问题。\nlet callbacks = []\nlet waiting = false\n\nfunction flushCallbacks() {\n  // 拷贝一份\n  let cbs = callbacks.slice(0)\n  waiting = false\n  callbacks = []\n  cbs.forEach((cb) => cb()) // 按照次序执行\n}\n\n// nextTick 没有直接使用某个api，来使用异步。而是优雅降级\n// 内部先采用的是promise（ie不兼容） MutationObserver(h5的api) 可以考虑ie专享setImmediate ---> setTimeout\nlet timerFunc\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks)\n  }\n} else if (MutationObserver) {\n  let observer = new MutationObserver(flushCallbacks) //这里传入的回调是异步执行的。\n  let textNode = document.createTextNode(1)\n  observer.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    textNode.textContent = 2\n  }\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks)\n  }\n} else {\n  timerFunc = setTimeout(() => {\n    flushCallbacks\n  }, 0)\n}\n\nexport function nextTick(cb) {\n  callbacks.push(cb)\n  if (!waiting) {\n    setTimeout(() => {\n      timerFunc() // 多次使用nextTick，最后一起刷新。\n    }, 0)\n    waiting = true\n  }\n}\n\nexport default Watch\n","import Watch from \"./watcher\"\n\nlet id = 0\n// dep用来收集watcher，而且，dep和watcher是多对多的关系。\n// 重点：只有在模版中使用的变量，才会被收集\nclass Dep {\n  constructor() {\n    this.id = id++\n    this.subs = []\n  }\n\n  depend() {\n    // 需要对watcher去重。只是一个单向的关系.dep -> watcher, 所以不能简单的把wathcer直接记录下来。\n    // this.subs.push(Dep.target)\n\n    // 调用watcher的addDep方法。把当前dep传给wathcer\n    Dep.target.addDep(this)\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher)\n  }\n\n  // 通知更新, 告诉watcher，去更新视图\n  notify() {\n    this.subs.forEach(item => item.update())\n  }\n}\n// 静态属性。只有一个。\n// 记录的是wathcer\nDep.target = null\n\nexport default Dep\n","import { newArrayProto } from \"./array\"\nimport Dep from \"./dep\"\n\nclass Observe {\n  constructor(data) {\n    // Object.defineProperty只能劫持已经存在的属性，不能劫持新增的属性（为此vue会新增一些方法例如：$set, $delete）\n    // 把Observe挂载到__ob__上，做一个标识（识别是否已经监听），同时可以使用walk和observeArray方法。\n    // 使用Object.defineProperty方法加上__ob__属性，表示已经监听，并且让这个属性不可枚举，防止死循环。\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false,\n    })\n    if (Array.isArray(data)) {\n      // 为了解决数组中新增的属性不能劫持的问题，需要重写素组方法，并且不可以影响之前的数组方法。\n      // 新建一个array.js实现新增属性的方法重写。\n      data.__proto__ = newArrayProto\n      // 修改数组的每一项时进行修改，不管是基本数据类型，还是引用数据类型。\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n  // 遍历对象，对每一个属性进行劫持\n  walk(data) {\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key])\n    })\n  }\n  // 遍历数组，对每一项进行劫持\n  observeArray(data) {\n    data.forEach((item) => observe(item))\n  }\n}\n\n// 劫持数据的逻辑，响应式数据， 这是一个闭包\nexport function defineReactive(target, key, val) {\n  // 如果val是对象，则递归调用，劫持对象。\n  observe(val)\n  // 每一个属性都会有一个dep\n  let dep = new Dep()\n  // 对对象重新定义了。\n  Object.defineProperty(target, key, {\n    // 用户取值的时候\n    get() {\n      if(Dep.target) {\n        // 让这个属性的收集器记住当前的watcher\n        dep.depend()\n      }\n      return val\n    },\n    // 设置或者修改值时执行\n    set(newVal) {\n      if (val !== newVal) {\n\n        if(newVal === val) return\n        \n        // 对修改的对象属性进行劫持。\n        observe(newVal)\n        val = newVal\n        dep.notify() //通知更新\n      }\n    }\n  })\n}\n\n// 劫持数据\nexport function observe(data) {\n  // 1. 判断data是否是对象。不是对象，或者为空，不用劫持。\n  if (typeof data !== 'object' || data === null) {\n    return //只对对象进行劫持\n  }\n  // 2. 如果一个对象已经被劫持了，那么它就不需要再次被劫持。（判断方法是：添加一个实例，用实例来判断）\n  // 如果已经被劫持，就不需要再劫持了\n  if (data.__ob__ instanceof Observe) {\n    return data.__ob__;\n  }\n  // 3. 新增了Observer实例，判断这个对象是否已经被劫持\n  // 劫持数据\n  return new Observe(data)\n}\n","import { observe } from './observe/index'\n\nexport function initState(vm) {\n  const option = vm.$options\n  // 如果用户vue({data: {}}), 有data属性。就执行initData\n  if (option.data) {\n    initData(vm)\n  }\n}\n\nfunction proxy(vm, target) {\n  // vm[target])===vm._data\n  Object.keys(vm[target]).forEach((key) => {\n    Object.defineProperty(vm, key, {\n      get() {\n        return vm[target][key]\n      },\n      set(newVal) {\n        vm[target][key] = newVal\n      }\n    })\n  })\n}\n\n// \nfunction initData(vm) {\n  let data = vm.$options.data\n  // 1. 拿到data属性。由于data可能是函数，所以需要判断一下data的类型。\n  data = typeof data === 'function' ? data.call(this) : data\n\n  // 2. 把返回的对象放到vue实例的_data上。\n  vm._data = data\n  // 对vue2的数据进行劫持，使用js的api->defineProperty\n  observe(data)\n  // 3. 将vm._data中的数据都挂载到vm上,用vm来代理\n  proxy(vm, '_data')\n}\n","// Regular Expressions for parsing tags and attributes\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //匹配到的是一个标签名 <xxx匹配到的是开始标签的名字\nconst attribute =\n  // eslint-disable-next-line no-useless-escape\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst startTagClose = /^\\s*(\\/?)>/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配到的是</xxxx>结束标签。\n\n// vue3并没有使用正则\nexport function parseHTML(html) {\n  //html最开始肯定是一个<\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n  const stack = [] //用于存放元素\n  let currentParent //指向栈中的最后一个\n  // 根节点\n  let root\n\n  // 最终转化成一颗抽象的语法树\n  function createASTElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null\n    }\n  }\n\n  // 解析开始标签，使用栈来构造一棵树。\n  function start(tag, attrs) {\n    let node = createASTElement(tag, attrs)\n    if (!root) {\n      // 如果树为空，\n      root = node //则作为根节点\n    }\n    if (currentParent) {\n      node.parent = currentParent\n      currentParent.children.push(node)\n    }\n    stack.push(node) // 压入栈中\n    currentParent = node // currentParent指向栈中的最后一个。\n  }\n  // 解析文本\n  function chars(text) {\n    text = text.replace(/\\s/g, '')\n    text &&\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent\n      })\n  }\n  // 结束标签处理\n  function end(tag) {\n    // 标签匹配结束时，弹出最后一个\n    // eslint-disable-next-line no-unused-vars\n    let node = stack.pop()\n    // todo:校验标签是否合法\n    // 再把currentParent指向栈的最后一个元素\n    currentParent = stack[stack.length - 1]\n  }\n  // 匹配成功后删除对应的内容\n  function advance(n) {\n    html = html.substring(n)\n  }\n  // 匹配标签\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1], //标签名\n        attrs: []\n      }\n      // 匹配完成后就把匹配过的数据删除掉,\n      advance(start[0].length)\n      // 如果不是开始标签的结束，就一直匹配下去\n      let attr, end\n      // 拿到标签的属性。\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length)\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true\n        })\n      }\n      if (end) {\n        advance(end[0].length)\n      }\n      return match\n    }\n\n    return false\n  }\n  // 一直循环标签， 直到html中什么都没有\n  while (html) {\n    // <div>dwdawd</div>\n    // 1. 如果textEnd == 0 说明是一个开始标签或者结束标签。\n    // 如果textEnd > 0说明就是文本的结束位置\n    let textEnd = html.indexOf('<') //如果indexOf中的索引是0 则说明是个标签。\n    if (textEnd == 0) {\n      // 开始标签的匹配结果\n      const startTagMatch = parseStartTag()\n      // console.log(\"startTagMatch\", startTagMatch)\n      if (startTagMatch) {\n        // 解析到了开始标签\n        // todo: 解析开始标签。\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue //直接跳过当前循环，进入下一次循环。节省性能。\n      }\n      // 结束标签匹配\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        end(endTagMatch[1])\n        advance(endTagMatch[0].length)\n        continue\n      }\n    }\n    // 2. textEnd>=0说明有文本了。开始匹配文本\n    if (textEnd >= 0) {\n      let text = html.substring(0, textEnd)\n      if (text) {\n        chars(text)\n        advance(text.length)\n      }\n    }\n  }\n  return root\n}\n","import { parseHTML } from './parse'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n// const regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\n\n// 把attrs对象转换为字符串\nfunction genProps(attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') {\n      let obj = {};\n      attr.value.split(';').forEach((item) => {\n        let [key, value] = item.split(':')\n        obj[key] = value;\n      })\n      attr.value = obj\n    }\n    // a:b,c:d\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  // 去掉最后一个,\n  return `{${str.slice(0, -1)}}`\n}\n\n// 生成dom节点\nfunction gen(node) {\n  // 如果是dom节点就继续生成dom结构\n  if (node.type === 1) {\n    return codegen(node)\n  } else {\n    // 如果是文本\n    const text = node.text\n    // 匹配是不是普通文本，还是插值字符串\n    if (!defaultTagRE.test(text)) {\n      // _v是创建文本的函数\n      return `_v(${JSON.stringify(text)})`\n    } else {\n      /**\n       * 处理插值内容\n       * 如果是插值字符串，要使用这种方式来拼接字符\n       */\n      //_v(_s(name) + \"hello\")\n      let tokens = []\n      let match\n      // 正则的lastIndex 属性用于规定下次匹配的起始位置。不然匹配不到。\n      defaultTagRE.lastIndex = 0\n      let lastIndex = 0\n      while ((match = defaultTagRE.exec(text))) {\n        // 匹配的位置{{name}}  hezg {{age}} demo\n        let index = match.index\n        if (index > lastIndex) {\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n        }\n        // 放入匹配的结果。_s({{name}})\n        tokens.push(`_s(${match[1].trim()})`)\n        lastIndex = index + match[0].length\n      }\n      if (lastIndex < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\n      }\n      return `_v(${tokens.join('+')})`\n    }\n  }\n}\n\nfunction genChildren(children) {\n    return children.map((child) => gen(child)).join(',')\n}\n\n// 生成render函数\nfunction codegen(ast) {\n  const children = genChildren(ast.children)\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`\n  return code\n}\n\nexport function compileToFunction(template) {\n  // 1. 就是将template转化为ast语法树\n  let ast = parseHTML(template)\n  console.log(\"ast\", ast)\n  // 2. 生成render方法（render方法执行后的返回的结果就是 虚拟dom）\n  let code = codegen(ast)\n  // 这里使用with是因为，方便取值。因为code中的代码有传参数。使用render.call(vm)就可以改变with中this的指向。\n  code = `with(this){return ${code}}` \n  console.log(\"code\", code)\n\n  // render() {\n  //   return _c('div', {id:'app'}, _c('div', {style: {color: 'red'}}, _v(_s(name)+'hello'), _v('span', undefined, -v(_s(name)))))\n  // }\n  const render = new Function(code)\n  /**\n   * 模版引擎的实现原理都是with + new Function\n   */\n  return render\n}\n","\n// h()  _C()都是这个方法\nexport function createElementVNode(vm, tag, data = {}, ...chidren) {\n  if(data ==null) {\n    data = {};\n  }\n  let key = data.key\n  !!key && delete data.key\n\n  return vNode(vm, tag, key, data, chidren)\n}\n\n\n// _v();\nexport function createTextVNode(vm, text) {\n  return vNode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n// ast做的是语法层面的转换，它描述的是语法本身；（可以描述js，css，html）\n// 而vNode的虚拟dom是描述dom的元素，可以增加一些自定义属性。（只描述dom元素）\nfunction vNode(vm, tag, key, data, children, text) {\n\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text,\n    // 事件，插槽，等等一系列\n  }\n}","import Watch from './observe/watcher'\nimport { createElementVNode, createTextVNode } from './vdom'\n\n// 创建真实的dom\nfunction createElm(vnode) {\n  let { tag, data, children, text } = vnode\n  if (typeof tag === 'string') {\n    //tag如果是标签\n    // 这里把虚拟节点和真实节点联系起来。\n    vnode.el = document.createElement(tag)\n    // 更新data中的数据\n    patchProps(vnode.el, data)\n    // 如果有children，就使用递归来循环创建children里面的内容\n    children.forEach((child) => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    // 如果是文本\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\nfunction patchProps(el, props) {\n  for (let key in props) {\n    if (key === 'style') {\n      // style: {color: 'red'}\n      for (let styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n/**\n * 用于更新dom节点\n * @param {*} oldVnode 旧的dom节点\n * @param {*} vnode 新的dom节点\n */\nfunction patch(oldVnode, vnode) {\n  // 写的是初渲染流程\n  const isRealElement = oldVnode.nodeType\n  if (isRealElement) {\n    const elm = oldVnode\n    const parentElm = elm.parentNode //拿到父级元素。==> body\n    const newEle = createElm(vnode)\n    parentElm.insertBefore(newEle, elm.nextSibing)\n    parentElm.removeChild(elm)\n    return newEle\n  } else {\n    // todo: diff算法\n  }\n}\n/**\n * 但是现在有个问题，就是每次更新数据都需要手动的去执行_update和_render函数。\n * 为了解决这一问题，引入了观察者模式。为了节约性能，引入了diff算法。\n * @param {*} Vue\n */\nexport function initLifeCycle(Vue) {\n  // _update接收一个dom节点。把虚拟dom装为真实dom\n  Vue.prototype._update = function (vnode) {\n    // 将虚拟dom转换为真实dom\n    const vm = this\n    const el = vm.$el\n    // patch既有初始化的功能，又更新新的值\n    vm.$el = patch(el, vnode)\n  }\n\n  /**\n   * 底下的这些_c，_v, _s都是用来转换dom节点的。\n   */\n  // _c('div', {}, ...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n\n  // _v(text)\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n\n  //\n  Vue.prototype._s = function (value) {\n    if (typeof value != 'object') {\n      return value\n    }\n    return JSON.stringify(value)\n  }\n  // 创建虚拟dom\n  Vue.prototype._render = function () {\n    const vm = this\n    // 使用call让with中的this指向vm,并且执行函数\n    console.log('options', vm.$options.render.call(vm))\n    return vm.$options.render.call(vm)\n  }\n}\n\nexport function mountComponent(vm, el) {\n  // 把el也挂宅到vm实例上\n  vm.$el = el\n  // 1. 调用render方法产生虚拟节点，虚拟DOM\n  // vm._render() = vm.$options.render() 虚拟节点\n  // vm._update就是把虚拟节点变成真实的节点。\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  // 启动观察者模式\n  new Watch(vm, updateComponent, true)\n  // 2. 根据虚拟DOM产生真是DOM\n\n  // 3. 插入到el元素中\n}\n\n// vue的核心：1。创建了响应式数据；2.html模版转换成ast语法树；\n// 3.将ast语法树转换为render函数；4.后续每次更新html只需要执行render函数（无需再次执行ast语法树），节省性能。\n// 重点：render函数会产生虚拟节点。（使用响应式数据）\n// 5. 根据生成的虚拟节点创建真是的dom\n","import { initState } from './state'\nimport { compileToFunction } from './compiler/index.js'\nimport { mountComponent } from './lifecycle'\n\n// 通过导出方法给vue添加方法\nexport function initMixin(Vue) {\n  // 1. 给vue添加一个用于初始化操作的_init方法\n  Vue.prototype._init = function (options) {\n    const vm = this\n    // 使用vue时的$nextTick()，$data等等，将用户的选项挂载到实例上\n    vm.$options = options\n    // 初始化状态\n    initState(vm)\n\n    if (options.el) {\n      vm.$mount(options.el) //实现数据的挂载\n    }\n  }\n\n  /**\n   * 解析dom元素\n   * @param {*} el dom挂载点\n   */\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    el = document.querySelector(el)\n    let options = vm.$options\n    if (!options.render) {\n      //先看一下用户是否传入了render方法\n      let template\n      // 没有render看一下是否写了template,没写采用外部的template\n      if (!options.template && el) {\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = options.template //如果有el采用模板、\n        }\n      }\n      // 如果写了template就需要对模板进行编译，最终生成一个render函数。\n      if (template) {\n        const render = compileToFunction(template)\n        options.render = render // jsx最终会被编译成h('xxx')\n      }\n    }\n    // 最终可以获取到render方法。\n    mountComponent(vm, el);// 组件的挂载\n  }\n}\n","import { initMixin } from \"./init\"\nimport { initLifeCycle } from \"./lifecycle\"\nimport { nextTick } from \"./observe/watcher\"\n\n// 使用构造函数的方法创建Vue实例，将所有的方法都耦合起来。\nfunction Vue(options) {\n  // 这个_init函数在Vue的原型对象上。\n  this._init(options) //用户的配置\n}\n\ninitMixin(Vue) // 将initMixin方法添加到Vue的原型上\ninitLifeCycle(Vue)\n\nVue.prototype.$nextTick = nextTick\n\nexport default Vue\n\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","id","Watch","vm","fn","options","renderWatcher","getter","dep","depsId","Set","get","Dep","target","has","push","add","addSub","queueWatcher","queue","pending","flushScheduleQueue","flushQueue","item","run","watcher","setTimeout","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","nextTick","subs","addDep","update","Observe","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","val","depend","set","newVal","notify","initState","option","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","endTag","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","JSON","stringify","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","console","log","render","Function","createElementVNode","chidren","vNode","createTextVNode","undefined","createElm","vnode","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newEle","insertBefore","nextSibing","removeChild","initLifeCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","outerHTML","$nextTick"],"mappings":"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"}