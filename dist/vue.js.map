{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 获取 数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n\r\n// 拷贝一份数组原型，修改数组方法，不会影响Array的方法。\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 这里是改变元素组的方法。\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  // arr.push([1,2,3])\r\n  newArrayProto[method] = function (...args) {\r\n    // 这里重写了数组的方法。\r\n    // 调用原型上的方法。\r\n    // 这里的this指向的是谁调用的，this指向arr\r\n    const result= oldArrayProto[method].call(this, ...args);\r\n    // 需要对新增的数据再次劫持。\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if(inserted) {\r\n      // 对新增的数组内容再次劫持\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n\r\n\r\n","import { newArrayProto } from \"./array\"\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性，不能劫持新增的属性（为此vue会新增一些方法例如：$set, $delete）\r\n    // 把Observe挂载到__ob__上，做一个标识（识别是否已经监听），同时可以使用walk和observeArray方法。\r\n    // 使用Object.defineProperty方法加上__ob__属性，表示已经监听，并且让这个属性不可枚举，防止死循环。\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false,\r\n    })\r\n    if (Array.isArray(data)) {\r\n      // 为了解决数组中新增的属性不能劫持的问题，需要重写素组方法，并且不可以影响之前的数组方法。\r\n      // 新建一个array.js实现新增属性的方法重写。\r\n      data.__proto__ = newArrayProto\r\n      //  修改数组的每一项时进行修改，不管是基本数据类型，还是引用数据类型。\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  // 遍历对象，对每一个属性进行劫持\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n  // 遍历数组，对每一项进行劫持\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item))\r\n  }\r\n}\r\n\r\n// 劫持数据，响应式数据， 这是一个闭包\r\nexport function defineReactive(target, key, val) {\r\n  // 如果val是对象，则递归调用，劫持对象。\r\n  observe(val)\r\n  // 对对象重新定义了。\r\n  Object.defineProperty(target, key, {\r\n    // 取值的时候\r\n    get() {\r\n      // console.log('用户取值了',key)\r\n      return val\r\n    },\r\n    // 设置或者修改值时执行\r\n    set(newVal) {\r\n      if (val !== newVal) {\r\n        // console.log('用户设置，修改了值')\r\n        // 对修改的对象属性进行劫持。\r\n        observe(newVal)\r\n        val = newVal\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== 'object' || data === null) {\r\n    return //只对对象进行劫持\r\n  }\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持了，那么它就不需要再次被劫持。（判断方法是：添加一个实例，用实例来判断）\r\n  // 新增了Observer实例，判断这个对象是否已经被劫持\r\n  return new Observe(data)\r\n}\r\n","import { observe } from './observe/index'\r\n\r\nexport function initState(vm) {\r\n  const option = vm.$options\r\n  if (option.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target) {\r\n  // vm[target])===vm._data\r\n  Object.keys(vm[target]).forEach((key) => {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm[target][key]\r\n      },\r\n      set(newVal) {\r\n        vm[target][key] = newVal\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  // data可能是函数\r\n  data = typeof data === 'function' ? data.call(this) : data\r\n\r\n  // 把返回的对象放到_data上。\r\n  vm._data = data\r\n  // 对vue2的数据进行劫持，采用一个api，defineProperty\r\n  observe(data)\r\n  // 将vm._data挂载到vm上,用vm来代理\r\n  proxy(vm, '_data')\r\n}\r\n","// Regular Expressions for parsing tags and attributes\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //匹配到的是一个标签名 <xxx匹配到的是开始标签的名字\r\nconst attribute =\r\n  // eslint-disable-next-line no-useless-escape\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配到的是</xxxx>结束标签。\r\n\r\n// vue3并没有使用正则\r\nexport function parseHTML(html) {\r\n  //html最开始肯定是一个<\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = [] //用于存放元素\r\n  let currentParent //指向栈中的最后一个\r\n  // 根节点\r\n  let root\r\n\r\n  // 最终转化成一颗抽象的语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  // 解析开始标签，使用栈来构造一棵树。\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs)\r\n    if (!root) {\r\n      // 如果树为空，\r\n      root = node //则作为根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node) // 压入栈中\r\n    currentParent = node // currentParent指向栈中的最后一个。\r\n  }\r\n  // 解析文本\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent\r\n      })\r\n  }\r\n  // 结束标签处理\r\n  function end(tag) {\r\n    // 标签匹配结束时，弹出最后一个\r\n    // eslint-disable-next-line no-unused-vars\r\n    let node = stack.pop()\r\n    // todo:校验标签是否合法\r\n    // 再把currentParent指向栈的最后一个元素\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  // 匹配成功后删除对应的内容\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  // 匹配标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], //标签名\r\n        attrs: []\r\n      }\r\n      // 匹配完成后就把匹配过的数据删除掉,\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束，就一直匹配下去\r\n      let attr, end\r\n      // 拿到标签的属性。\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true\r\n        })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n\r\n    return false\r\n  }\r\n  // 一直循环标签， 直到html中什么都没有\r\n  while (html) {\r\n    // <div>dwdawd</div>\r\n    // 1. 如果textEnd == 0 说明是一个开始标签或者结束标签。\r\n    // 如果textEnd > 0说明就是文本的结束位置\r\n    let textEnd = html.indexOf('<') //如果indexOf中的索引是0 则说明是个标签。\r\n    if (textEnd == 0) {\r\n      // 开始标签的匹配结果\r\n      const startTagMatch = parseStartTag()\r\n      // console.log(\"startTagMatch\", startTagMatch)\r\n      if (startTagMatch) {\r\n        // 解析到了开始标签\r\n        // todo: 解析开始标签。\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue //直接跳过当前循环，进入下一次循环。节省性能。\r\n      }\r\n      // 结束标签匹配\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue\r\n      }\r\n    }\r\n    // 2. textEnd>=0说明有文本了。开始匹配文本\r\n    if (textEnd >= 0) {\r\n      let text = html.substring(0, textEnd)\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length)\r\n      }\r\n    }\r\n  }\r\n  return root\r\n}\r\n","import { parseHTML } from './parse'\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n// const regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\n\r\n// 吧attrs对象转换为字符串\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {};\r\n      attr.value.split(';').forEach((item) => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value;\r\n      })\r\n      attr.value = obj\r\n    }\r\n    // a:b,c:d\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  // 去掉最后一个,\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n  // 如果是dom节点就继续生成dom结构\r\n  if (node.type === 1) {\r\n    return codegen(node)\r\n  } else {\r\n    // 如果是文本\r\n    const text = node.text\r\n    // 匹配是不是普通文本，还是插值字符串\r\n    if (!defaultTagRE.test(text)) {\r\n      // _v是创建文本的函数\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      // 如果是插值字符串，要使用这种方式来拼接字符\r\n      //_v(_s(name) + \"hello\")\r\n      let tokens = []\r\n      let match\r\n      // 每次\r\n      defaultTagRE.lastIndex = 0\r\n      let lastIndex = 0\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        // 匹配的位置{{name}}  hezg {{age}} demo\r\n        let index = match.index\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        // 放入匹配的结果。_s({{name}})\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map((child) => gen(child)).join(',')\r\n}\r\n\r\n// 生成render函数\r\nfunction codegen(ast) {\r\n  const children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`\r\n  return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  // 1. 就是将template转化为ast语法树\r\n  let ast = parseHTML(template)\r\n  // 2. 生成render方法（render方法执行后的返回的结果就是 虚拟dom）\r\n  let code = codegen(ast)\r\n  console.log(code)\r\n  // 这里使用with是因为，方便取值。因为code中的代码有传参数。使用render.call(vm)就可以改变with中this的指向。\r\n  code = `with(this){return ${code}}`\r\n  // render() {\r\n  //   return _c('div', {id:'app'}, _c('div', {style: {color: 'red'}}, _v(_s(name)+'hello'), _v('span', undefined, -v(_s(name)))))\r\n  // }\r\n  const render = new Function(code)\r\n  /**\r\n   * 模版引擎的实现原理都是with + new Function\r\n   */\r\n  return render\r\n}\r\n","\r\n// h()  _C()都是这个方法\r\nexport function createElementVNode(vm, tag, data = {}, ...chidren) {\r\n  if(data ==null) {\r\n    data = {};\r\n  }\r\n  let key = data.key\r\n  !!key && delete data.key\r\n\r\n  return vNode(vm, tag, key, data, chidren)\r\n}\r\n\r\n\r\n// _v();\r\nexport function createTextVNode(vm, text) {\r\n  return vNode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast做的是语法层面的转换，它描述的是语法本身；（可以描述js，css，html）\r\n// 而vNode的虚拟dom是描述dom的元素，可以增加一些自定义属性。（只描述dom元素）\r\nfunction vNode(vm, tag, key, data, children, text) {\r\n\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    // 事件，插槽，等等一系列\r\n  }\r\n}","import { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nexport function initLifeCycle(Vue) {\r\n  // _update接收一个dom节点。\r\n  Vue.prototype._update = function (vnode) {\r\n    \r\n    console.log('_update',vnode)\r\n  }\r\n  /**\r\n   * 底下的这些_c，_v, _s都是用来转换dom节点的。\r\n   * \r\n   */\r\n  // _c('div', {}, ...children)\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n  // _v(text)\r\n  Vue.prototype._v = function () {\r\n    return  createTextVNode(this, ...arguments)\r\n  }\r\n  // \r\n  Vue.prototype._s = function (value) {\r\n    if(typeof value != 'object') {return value}\r\n    return JSON.stringify(value)\r\n  }\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    // 使用call让with中的this指向vm\r\n    return vm.$options.render.call(vm)\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  // 1. 调用render方法产生虚拟节点，虚拟DOM\r\n  // vm._render() = vm.$options.render() 虚拟节点\r\n  // vm._update就是把虚拟节点变成真实的节点。\r\n  vm._update(vm._render())\r\n  // 2. 根据虚拟DOM产生真是DOM\r\n\r\n  // 3. 插入到el元素中\r\n}\r\n\r\n// vue的核心：1。创建了响应式数据；2.html模版转换成ast语法树；\r\n// 3.将ast语法树转换为render函数；4.后续每次更新html只需要执行render函数（无需再次执行ast语法树），节省性能。\r\n// 重点：render函数会产生虚拟节点。（使用响应式数据）\r\n// 5. 根据生成的虚拟节点创建真是的dom\r\n","import { initState } from './state'\r\nimport { compileToFunction } from './compiler/index.js'\r\nimport { mountComponent } from './lifecycle'\r\n\r\n// 通过导出方法给vue添加方法\r\nexport function initMixin(Vue) {\r\n  // 1. 给vue添加一个用于初始化操作的_init方法\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // 使用vue时的$nextTick()，$data等等，将用户的选项挂载到实例上\r\n    vm.$options = options\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el) //实现数据的挂载\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析dom元素\r\n   * @param {*} el dom挂载点\r\n   */\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let options = vm.$options\r\n    if (!options.render) {\r\n      //先看一下用户是否传入了render方法\r\n      let template\r\n      // 没有render看一下是否写了template,没写采用外部的template\r\n      if (!options.template && el) {\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          template = options.template //如果有el采用模板、\r\n        }\r\n      }\r\n      // 如果写了template就需要对模板进行编译，最终生成一个render函数。\r\n      if (template) {\r\n        const render = compileToFunction(template)\r\n        options.render = render // jsx最终会被编译成h('xxx')\r\n      }\r\n    }\r\n    // 最终可以获取到render方法。\r\n    mountComponent(vm, el);// 组件的挂载\r\n  }\r\n}\r\n","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\n\r\n// 使用构造函数的方法创建Vue实例，将所有的方法都耦合起来。\r\nfunction Vue(options) {\r\n  // 这个_init函数在Vue的原型对象上。\r\n  this._init(options) //用户的配置\r\n}\r\n\r\ninitMixin(Vue) // 将initMixin方法添加到Vue的原型上\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observe","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","val","get","set","newVal","initState","vm","option","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","endTag","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","JSON","stringify","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","console","log","render","Function","createElementVNode","chidren","vNode","createTextVNode","undefined","initLifeCycle","Vue","_update","vnode","_c","arguments","_v","_s","_render","mountComponent","el","initMixin","_init","options","$mount","document","querySelector","outerHTML"],"mappings":"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"}