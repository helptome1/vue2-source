{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// Regular Expressions for parsing tags and attributes\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //匹配到的是一个标签名\r\n\r\nconsole.log(startTagOpen)\r\n\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst dynamicArgAttribute =\r\n  /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\nexport function compileToFunctions(template) {\r\n\r\n  // 1. 就是将template转化为ast语法树\r\n\r\n  // 2. 生成render方法（render方法执行后的返回的结果就是 虚拟dom）\r\n\r\n}","// 获取 数组的原型\r\nlet oldArrayProto = Array.prototype;\r\n\r\n// 拷贝一份数组原型，修改数组方法，不会影响Array的方法。\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 这里是改变元素组的方法。\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  // arr.push([1,2,3])\r\n  newArrayProto[method] = function (...args) {\r\n    // 这里重写了数组的方法。\r\n    // 调用原型上的方法。\r\n    // 这里的this指向的是谁调用的，this指向arr\r\n    const result= oldArrayProto[method].call(this, ...args);\r\n    // 需要对新增的数据再次劫持。\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if(inserted) {\r\n      // 对新增的数组内容再次劫持\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n\r\n\r\n","import { newArrayProto } from \"./array\"\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性，不能劫持新增的属性（为此vue会新增一些方法例如：$set, $delete）\r\n    // 把Observe挂载到__ob__上，做一个标识（识别是否已经监听），同时可以使用walk和observeArray方法。\r\n    // 使用Object.defineProperty方法加上__ob__属性，表示已经监听，并且让这个属性不可枚举，防止死循环。\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false,\r\n    })\r\n    if (Array.isArray(data)) {\r\n      // 为了解决数组中新增的属性不能劫持的问题，需要重写素组方法，并且不可以影响之前的数组方法。\r\n      // 新建一个array.js实现新增属性的方法重写。\r\n      data.__proto__ = newArrayProto\r\n      //  修改数组的每一项时进行修改，不管是基本数据类型，还是引用数据类型。\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  // 遍历对象，对每一个属性进行劫持\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n  // 遍历数组，对每一项进行劫持\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item))\r\n  }\r\n}\r\n\r\n// 劫持数据，响应式数据， 这是一个闭包\r\nexport function defineReactive(target, key, val) {\r\n  // 如果val是对象，则递归调用，劫持对象。\r\n  observe(val)\r\n  // 对对象重新定义了。\r\n  Object.defineProperty(target, key, {\r\n    // 取值的时候\r\n    get() {\r\n      // console.log('用户取值了',key)\r\n      return val\r\n    },\r\n    // 设置或者修改值时执行\r\n    set(newVal) {\r\n      if (val !== newVal) {\r\n        // console.log('用户设置，修改了值')\r\n        // 对修改的对象属性进行劫持。\r\n        observe(newVal)\r\n        val = newVal\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== 'object' || data === null) {\r\n    return //只对对象进行劫持\r\n  }\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象已经被劫持了，那么它就不需要再次被劫持。（判断方法是：添加一个实例，用实例来判断）\r\n  // 新增了Observer实例，判断这个对象是否已经被劫持\r\n  return new Observe(data)\r\n}\r\n","import { observe } from './observe/index'\r\n\r\nexport function initState(vm) {\r\n  const option = vm.$options\r\n  if (option.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target) {\r\n  // vm[target])===vm._data\r\n  Object.keys(vm[target]).forEach((key) => {\r\n    Object.defineProperty(vm, key, {\r\n      get() {\r\n        return vm[target][key]\r\n      },\r\n      set(newVal) {\r\n        vm[target][key] = newVal\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  // data可能是函数\r\n  data = typeof data === 'function' ? data.call(this) : data\r\n\r\n  // 把返回的对象放到_data上。\r\n  vm._data = data\r\n  // 对vue2的数据进行劫持，采用一个api，defineProperty\r\n  observe(data)\r\n  // 将vm._data挂载到vm上,用vm来代理\r\n  proxy(vm, '_data')\r\n}\r\n","import { compileToFunctions } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\n\r\n// 通过导出方法给vue添加方法 \r\nexport function initMixin(Vue) {\r\n  // 给vue添加一个用于初始化操作的_init方法\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // 使用vue时的$nextTick()，$data等等，将用户的选项挂载到实例上\r\n    vm.$options = options\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el);//实现数据的挂载\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el);\r\n    let options = vm.$options\r\n    if (!options.render) {//先看一下用户是否传入了render方法\r\n      let template\r\n      // 没有render看一下是否写了template,没写采用外部的template\r\n      if (!options.template && el) {\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          template = options.template //如果有el采用模板、\r\n        }\r\n      }\r\n      // 如果写了template就需要对模板进行编译\r\n      if(template) {\r\n        const render = compileToFunctions(template)\r\n        options.render  = render // jsx最终会被编译成h('xxx')\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n","import { initMixin } from \"./init\"\r\n\r\n// 使用构造函数的方法创建Vue实例，将所有的方法都耦合起来。\r\nfunction Vue(options) {\r\n  // 这个_init函数在Vue的原型对象上。\r\n  this._init(options) //用户的配置\r\n}\r\n\r\ninitMixin(Vue) // 将initMixin方法添加到Vue的原型上\r\n\r\nexport default Vue\r\n\r\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","console","log","compileToFunctions","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observe","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","val","get","set","newVal","initState","vm","option","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}