{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/gloableAPI.js","../src/observe/watcher.js","../src/observe/dep.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// Regular Expressions for parsing tags and attributes\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //匹配到的是一个标签名 <xxx匹配到的是开始标签的名字\nconst attribute =\n  // eslint-disable-next-line no-useless-escape\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst startTagClose = /^\\s*(\\/?)>/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //匹配到的是</xxxx>结束标签。\n\n// vue3并没有使用正则\nexport function parseHTML(html) {\n  //html最开始肯定是一个<\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n  const stack = [] //用于存放元素\n  let currentParent //指向栈中的最后一个\n  // 根节点\n  let root\n\n  // 最终转化成一颗抽象的语法树\n  function createASTElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null\n    }\n  }\n\n  // 解析开始标签，使用栈来构造一棵树。\n  function start(tag, attrs) {\n    let node = createASTElement(tag, attrs)\n    if (!root) {\n      // 如果树为空，\n      root = node //则作为根节点\n    }\n    if (currentParent) {\n      node.parent = currentParent\n      currentParent.children.push(node)\n    }\n    stack.push(node) // 压入栈中\n    currentParent = node // currentParent指向栈中的最后一个。\n  }\n  // 解析文本\n  function chars(text) {\n    text = text.replace(/\\s/g, '')\n    text &&\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent\n      })\n  }\n  // 结束标签处理\n  function end(tag) {\n    // 标签匹配结束时，弹出最后一个\n    // eslint-disable-next-line no-unused-vars\n    let node = stack.pop()\n    // todo:校验标签是否合法\n    // 再把currentParent指向栈的最后一个元素\n    currentParent = stack[stack.length - 1]\n  }\n  // 匹配成功后删除对应的内容\n  function advance(n) {\n    html = html.substring(n)\n  }\n  // 匹配标签\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1], //标签名\n        attrs: []\n      }\n      // 匹配完成后就把匹配过的数据删除掉,\n      advance(start[0].length)\n      // 如果不是开始标签的结束，就一直匹配下去\n      let attr, end\n      // 拿到标签的属性。\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length)\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true\n        })\n      }\n      if (end) {\n        advance(end[0].length)\n      }\n      return match\n    }\n\n    return false\n  }\n  // 一直循环标签， 直到html中什么都没有\n  while (html) {\n    // <div>dwdawd</div>\n    // 1. 如果textEnd == 0 说明是一个开始标签或者结束标签。\n    // 如果textEnd > 0说明就是文本的结束位置\n    let textEnd = html.indexOf('<') //如果indexOf中的索引是0 则说明是个标签。\n    if (textEnd == 0) {\n      // 开始标签的匹配结果\n      const startTagMatch = parseStartTag()\n      // console.log(\"startTagMatch\", startTagMatch)\n      if (startTagMatch) {\n        // 解析到了开始标签\n        // todo: 解析开始标签。\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue //直接跳过当前循环，进入下一次循环。节省性能。\n      }\n      // 结束标签匹配\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        end(endTagMatch[1])\n        advance(endTagMatch[0].length)\n        continue\n      }\n    }\n    // 2. textEnd>=0说明有文本了。开始匹配文本\n    if (textEnd >= 0) {\n      let text = html.substring(0, textEnd)\n      if (text) {\n        chars(text)\n        advance(text.length)\n      }\n    }\n  }\n  return root\n}\n","import { parseHTML } from './parse'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n// const regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\n\n// 把attrs对象转换为字符串\nfunction genProps(attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') {\n      let obj = {};\n      attr.value.split(';').forEach((item) => {\n        let [key, value] = item.split(':')\n        obj[key] = value;\n      })\n      attr.value = obj\n    }\n    // a:b,c:d\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  // 去掉最后一个,\n  return `{${str.slice(0, -1)}}`\n}\n\n// 生成dom节点\nfunction gen(node) {\n  // 如果是dom节点就继续生成dom结构\n  if (node.type === 1) {\n    return codegen(node)\n  } else {\n    // 如果是文本\n    const text = node.text\n    // 匹配是不是普通文本，还是插值字符串\n    if (!defaultTagRE.test(text)) {\n      // _v是创建文本的函数\n      return `_v(${JSON.stringify(text)})`\n    } else {\n      /**\n       * 处理插值内容\n       * 如果是插值字符串，要使用这种方式来拼接字符\n       */\n      //_v(_s(name) + \"hello\")\n      let tokens = []\n      let match\n      // 正则的lastIndex 属性用于规定下次匹配的起始位置。不然匹配不到。\n      defaultTagRE.lastIndex = 0\n      let lastIndex = 0\n      while ((match = defaultTagRE.exec(text))) {\n        // 匹配的位置{{name}}  hezg {{age}} demo\n        let index = match.index\n        if (index > lastIndex) {\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n        }\n        // 放入匹配的结果。_s({{name}})\n        tokens.push(`_s(${match[1].trim()})`)\n        lastIndex = index + match[0].length\n      }\n      if (lastIndex < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\n      }\n      return `_v(${tokens.join('+')})`\n    }\n  }\n}\n\nfunction genChildren(children) {\n    return children.map((child) => gen(child)).join(',')\n}\n\n// 生成render函数\nfunction codegen(ast) {\n  const children = genChildren(ast.children)\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`\n  return code\n}\n\nexport function compileToFunction(template) {\n  // 1. 就是将template转化为ast语法树\n  let ast = parseHTML(template)\n  // 2. 生成render方法（render方法执行后的返回的结果就是 虚拟dom）\n  let code = codegen(ast)\n  // 这里使用with是因为，方便取值。因为code中的代码有传参数。使用render.call(vm)就可以改变with中this的指向。\n  code = `with(this){return ${code}}` \n\n  // render() {\n  //   return _c('div', {id:'app'}, _c('div', {style: {color: 'red'}}, _v(_s(name)+'hello'), _v('span', undefined, -v(_s(name)))))\n  // }\n  const render = new Function(code)\n  /**\n   * 模版引擎的实现原理都是with + new Function\n   */\n  return render\n}\n","\n// 静态方法\n// 1. 策略模式---->使用策略减少if else\n// 2. 创建生命周期\nconst strats = {}\nconst LIFECYCLE = ['beforeCreate', 'created']\nLIFECYCLE.forEach((hook) => {\n  strats[hook] = function (p, c) {\n    // 1. {} {created: function() {}} => {created: [fn]}\n    // 2. {created: [fn]} {created: function() {}} => {created: [fn, fn]}\n    if (c) {\n      //如果有儿子\n      if (p) {\n        // 如果有父亲, 优先使用呢儿子的方法，所以使用覆盖。\n        return p.concat(c)\n      } else {\n        // 只有儿子\n        return [c]\n      }\n    } else {\n      // 没有儿子\n      return p\n    }\n  }\n})\nexport function mergeOptions(parent, child) {\n  const options = {}\n  for (let key in parent) {\n    mergeField(key)\n  }\n  for (let key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key) {\n    // 使用策略模式，减少if else\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      options[key] = child[key] || parent[key] // 优先采用儿子，再采用父亲\n    }\n  }\n  return options\n}\n","import { mergeOptions } from \"./utils\"\n\nexport function initGlobalAPI(Vue) {\n  Vue.options = {}\n  Vue.mixin = function (mixin) {\n    // debugger\n    // 把用户选项和全局的options合并\n    this.options = mergeOptions(this.options, mixin)\n    return this\n  }\n}\n","import Dep, { popTarget, pushTarget } from './dep'\n\nlet id = 0\n\n// 观察者，观察某个属性的变化。每个属性都有一个dep(被观察者)，watcher就是观察者。属性变化会通知观察者更新。\n// 1. 不同的组件有不同的watcher。 目前只有一个，渲染跟实例\nclass Watch {\n  constructor(vm, exprOrFn, options, cb) {\n    this.id = id++\n    this.renderWatcher = options\n    if(typeof exprOrFn === 'string') {\n      this.getter = function () {\n        return vm[exprOrFn]\n      }\n    } else {\n      this.getter = exprOrFn\n    }\n    this.deps = [] //后续实现计算属性，和一些清理工作时使用。记住dep\n    this.depsId = new Set()\n    this.lazy = options.lazy\n    this.dirty = this.lazy // 缓存值\n    this.vm = vm\n    this.cb = cb\n    this.user = options.user // 标识是否是用户自己的watcher\n    this.value = this.lazy ? undefined : this.get()\n  }\n  // 用户获取computed计算后的值\n  evaluate() {\n    this.value = this.get()\n    this.dirty = false\n  }\n\n  get() {\n    pushTarget(this) // 静态属性只有一份\n    // 回去vm上取值, 渲染函数vm._update(vm._render)或者计算属性的方法，\n    // 这里用call来执行函数是因为this可能为空\n    let value = this.getter.call(this.vm)\n    popTarget() // watcher已经记住了dep了，而且去重了，此时让dep也记住watcher.\n    return value\n  }\n\n  // 一个组件 对应着多个属性。重复的属性也不用记录。\n  addDep(dep) {\n    let id = dep.id\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep)\n      this.depsId.add(id)\n      dep.addSub(this) // watcher已经记住了dep，而且去重复了，可以让dep记住了watcher\n    }\n  }\n\n  depend() {\n    let i = this.deps.length\n    while (i--) {\n      // dep.depend()\n      this.deps[i].depend() // 让计算属性watcher，也收集渲染watcher.\n    }\n  }\n\n  // 更新视图\n  update() {\n    if (this.lazy) {\n      // 计算属性依赖的值发生了变化，就标识计算属性是脏值（旧值）\n      this.dirty = true\n    } else {\n      // 更新渲染\n      queueWatcher(this)\n    }\n  }\n\n  run() {\n    let oldValue = this.value\n    let newValue = this.get() // 执行刷新\n    if(this.user) {\n      this.cb.call(this.vm, newValue, oldValue)\n    }\n   }\n}\n\n// 以下代码用来，更新数据的时候，等到最后修改完，只刷新一次节约性能。\nlet queue = []\nlet has = {}\nlet pending = false // 防抖\nfunction flushScheduleQueue() {\n  // 拷贝了一份。\n  let flushQueue = queue.slice(0)\n  // 清空队列\n  queue = []\n  has = {}\n  pending = false\n  // 在刷新的过程中，可能有新的wathcer，回重新放到queue中。\n  flushQueue.forEach((item) => {\n    item.run()\n  })\n}\n\nfunction queueWatcher(watcher) {\n  const id = watcher.id\n  if (!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    // 不管我们的update执行多少次，但是最终只执行一轮刷新操作。\n    if (!pending) {\n      setTimeout(flushScheduleQueue, 0)\n      pending = true\n    }\n  }\n}\n\n/**\n    nextTick实现方式\n*/\n// nextTick并不是创建一个异步任务，而是将这个任务维护到了队列中去。\n// 使用p处理，使多次使用nextTick而执行一次。\nlet callbacks = []\nlet waiting = false\n\nfunction flushCallbacks() {\n  // 拷贝一份\n  let cbs = callbacks.slice(0)\n  waiting = false\n  callbacks = []\n  cbs.forEach((cb) => cb()) // 按照次序执行\n}\n\n// nextTick 没有直接使用某个api，来使用异步。而是优雅降级\n// 内部先采用的是promise（ie不兼容） MutationObserver(h5的api) 可以考虑ie专享setImmediate ---> setTimeout\nlet timerFunc\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks)\n  }\n} else if (MutationObserver) {\n  let observer = new MutationObserver(flushCallbacks) //这里传入的回调是异步执行的。\n  let textNode = document.createTextNode(1)\n  observer.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    textNode.textContent = 2\n  }\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks)\n  }\n} else {\n  timerFunc = setTimeout(() => {\n    flushCallbacks\n  }, 0)\n}\n\nexport function nextTick(cb) {\n  callbacks.push(cb)\n  if (!waiting) {\n    setTimeout(() => {\n      timerFunc() // 多次使用nextTick，最后一起刷新。\n    }, 0)\n    waiting = true\n  }\n}\n\nexport default Watch\n","import Watch from './watcher'\n\nlet id = 0\n// dep用来收集watcher，而且，dep和watcher是多对多的关系。\n// 重点：只有在模版中使用的变量，才会被收集\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = []\n    }\n    \n    depend() {\n        // 需要对watcher去重。只是一个单向的关系.dep -> watcher, 所以不能简单的把wathcer直接记录下来。\n        // this.subs.push(Dep.target)\n        // 调用watcher的addDep方法。把当前dep传给wathcer\n        Dep.target.addDep(this)\n    }\n\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n\n    // 通知更新, 告诉watcher，去更新视图\n    notify() {\n        this.subs.forEach((item) => item.update())\n    }\n}\n// 静态属性。\n// 记录的是wathcer， 先把它维护成栈\nDep.target = null\nlet stack = []\nexport function pushTarget(watcher) {\n    stack.push(watcher)\n    Dep.target = watcher\n}\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep\n","// 获取 数组的原型\nlet oldArrayProto = Array.prototype\n\n// 拷贝一份数组原型，修改数组方法，不会影响Array的方法。\nexport let newArrayProto = Object.create(oldArrayProto)\n\n// 这里是改变元素组的方法。\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n  newArrayProto[method] = function (...args) {\n    // 这里重写了数组的方法。\n    // 调用原型上的方法。\n    // 这里的this指向的是谁调用的，this指向arr\n    const result = oldArrayProto[method].call(this, ...args)\n    // 需要对新增的数据再次劫持。\n    let inserted\n    let ob = this.__ob__\n    switch (method) {\n      case 'push':\n        break\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n      default:\n        break\n    }\n    if (inserted) {\n      // 对新增的数组内容再次劫持\n      ob.observeArray(inserted)\n    }\n\n    // 数组变化了，通知对应的wathcer实现更新逻辑\n    ob.dep.notify()\n\n    return result\n  }\n})\n","import { newArrayProto } from './array'\nimport Dep from './dep'\n\nclass Observe {\n  constructor(data) {\n    // 给每个对象增加依赖收集功能。\n    this.dep = new Dep()\n    // Object.defineProperty只能劫持已经存在的属性，不能劫持新增的属性（为此vue会新增一些方法例如：$set, $delete）\n    // 把Observe挂载到__ob__上，做一个标识（识别是否已经监听），同时可以使用walk和observeArray方法。\n    // 使用Object.defineProperty方法加上__ob__属性，表示已经监听，并且让这个属性不可枚举，防止死循环。\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false\n    })\n    if (Array.isArray(data)) {\n      // 为了解决数组中新增的属性不能劫持的问题，需要重写素组方法，并且不可以影响之前的数组方法。\n      // 新建一个array.js实现新增属性的方法重写。\n      data.__proto__ = newArrayProto\n      // 修改数组的每一项时进行修改，不管是基本数据类型，还是引用数据类型。\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n  // 遍历对象，对每一个属性进行劫持\n  walk(data) {\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key])\n    })\n  }\n  // 遍历数组，对每一项进行劫持\n  observeArray(data) {\n    data.forEach((item) => observe(item))\n  }\n}\n\nfunction dependArray(val) {\n  for (let i = 0; i < val.length; i++) {\n    let current = val[i]\n    current.__ob__ && current.__ob__.dep.depend()\n    if (Array.isArray(current)) {\n      // 递归收集依赖\n      dependArray(current)\n    }\n  }\n}\n\n// 劫持数据的逻辑，响应式数据， 这是一个闭包\nexport function defineReactive(target, key, val) {\n  // 如果val是对象，则递归调用，进行属性劫持。 childOb.dep用来收集依赖。\n  const childOb = observe(val)\n  // 每一个属性都会有一个dep\n  let dep = new Dep()\n  // 对对象重新定义了。\n  Object.defineProperty(target, key, {\n    // 用户取值的时候\n    get() {\n      if (Dep.target) {\n        // 让这个属性是让收集器记住当前的watcher\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend() // 让数组和对象本身也实现依赖收集\n          if (Array.isArray(val)) {\n            //这种用来处理数组里嵌套数组的更新\n            dependArray(val)\n          }\n        }\n      }\n      return val\n    },\n    // 设置或者修改值时执行\n    set(newVal) {\n      if (val !== newVal) {\n        if (newVal === val) return\n\n        // 对修改的对象属性进行劫持。\n        observe(newVal)\n        val = newVal\n        dep.notify() //通知更新\n      }\n    }\n  })\n}\n\n// 劫持数据\nexport function observe(data) {\n  // 1. 判断data是否是对象。不是对象，或者为空，不用劫持。\n  if (typeof data !== 'object' || data === null) {\n    return //只对对象进行劫持\n  }\n  // 2. 如果一个对象已经被劫持了，那么它就不需要再次被劫持。（判断方法是：添加一个实例，用实例来判断）\n  // 如果已经被劫持，就不需要再劫持了\n  if (data.__ob__ instanceof Observe) {\n    return data.__ob__\n  }\n  // 3. 新增了Observer实例，判断这个对象是否已经被劫持\n  // 劫持数据\n  return new Observe(data)\n}\n","import Dep from './observe/dep'\nimport { observe } from './observe/index'\nimport Watch, { nextTick } from './observe/watcher'\n\nexport function initState(vm) {\n  const option = vm.$options\n  // 如果用户vue({data: {}}), 有data属性。就执行initData\n  if (option.data) {\n    initData(vm)\n  }\n  // 如果用户vue({computed: {}}), 有computed属性。就执行initComputed\n  if (option.computed) {\n    initComputed(vm)\n  }\n  // 如果用户vue({watch: {}}), 有watch属性。就执行initWatch\n  if (option.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initWatch(vm) {\n  const watch = vm.$options.watch\n  for (let key in watch) {\n    const handler = watch[key]\n    // 如果用户传递的是数组，就循环执行。\n    if (Array.isArray(handler)) {\n      handler.forEach((handle) => {\n        createWatcher(vm, key, handle)\n      })\n    } else {\n      createWatcher(vm, key, handler)\n    }\n  }\n}\n\nfunction createWatcher(vm, key, handler) {\n  // handler可能是字符串或者函数.如果是字符串，就是methods中的方法。\n  if (typeof handler === 'string') {\n    handler = vm[handler]\n  }\n  return vm.$watch(key, handler)\n}\n\nfunction proxy(vm, target) {\n  // vm[target])===vm._data\n  Object.keys(vm[target]).forEach((key) => {\n    Object.defineProperty(vm, key, {\n      get() {\n        return vm[target][key]\n      },\n      set(newVal) {\n        vm[target][key] = newVal\n      }\n    })\n  })\n}\n\n// 初始化data\nfunction initData(vm) {\n  let data = vm.$options.data\n  // 1. 拿到data属性。由于data可能是函数，所以需要判断一下data的类型。\n  data = typeof data === 'function' ? data.call(this) : data\n\n  // 2. 把返回的对象放到vue实例的_data上。\n  vm._data = data\n  // 对vue2的数据进行劫持，使用js的api->defineProperty\n  observe(data)\n  // 3. 将vm._data中的数据都挂载到vm上,用vm来代理\n  proxy(vm, '_data')\n}\n\nfunction initComputed(vm) {\n  const computeds = vm.$options.computed\n  // 将计算属性保存到vm上，方便后续执行。\n  const watchers = (vm._computedWatchers = {})\n  for (let key in computeds) {\n    let userDef = computeds[key]\n\n    // 我们需要监控 计算属性中get的变化。\n    let fn = typeof userDef === 'function' ? userDef : userDef.get\n\n    // lazy是暂时不执行fn方法, 再将key和wathcer对应起来。\n    watchers[key] = new Watch(vm, fn, { lazy: true })\n\n    defineComputed(vm, key, userDef)\n  }\n}\n\nfunction defineComputed(target, key, userDef) {\n  // 获取getter或者setter\n  // const getter = typeof userDef === 'function' ? userDef : userDef.get\n  const setter = userDef.set || (() => {})\n  // 通过实例拿到对应的属性。\n  // 为了让计算属性在使用时再去执行，执行的fn要写在get函数中。\n  Object.defineProperty(target, key, {\n    get: createComputedGetter(key),\n    set: setter\n  })\n}\n\nfunction createComputedGetter(key) {\n  // 需要检测是否执行这个getter\n  return function () {\n    // this指向的是vm\n    const watcher = this._computedWatchers[key]\n    if (watcher.dirty) {\n      // 如果是脏的就去执行computed计算属性，用户传入的计算属性\n      watcher.evaluate() // 求值后把dirty变为false，下次就不会执行了。\n    }\n    if (Dep.target) {\n      watcher.depend()\n    }\n    // 返回计算属性求得的值。\n    return watcher.value\n  }\n}\n\nexport function initStateMixin(Vue) {\n  Vue.prototype.$nextTick = nextTick\n  Vue.prototype.$watch = function (expOrFn, cb) {\n    new Watch(this, expOrFn, { user: true }, cb)\n  }\n}\n","// h()  _C()都是这个方法\nexport function createElementVNode(vm, tag, data = {}, ...chidren) {\n  if (data == null) {\n    data = {}\n  }\n  let key = data.key\n  !!key && delete data.key\n\n  return vNode(vm, tag, key, data, chidren)\n}\n\n// _v();\nexport function createTextVNode(vm, text) {\n  return vNode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n// ast做的是语法层面的转换，它描述的是语法本身；（可以描述js，css，html）\n// 而vNode的虚拟dom是描述dom的元素，可以增加一些自定义属性。（只描述dom元素）\nfunction vNode(vm, tag, key, data, children, text) {\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text\n    // 事件，插槽，等等一系列\n  }\n}\n\n// 判断两个节点是否是同一个\nexport function isSameVnode(oldVnode, newVnode) {\n  return newVnode.tag === oldVnode.tag && newVnode.key === oldVnode.key\n}","import { isSameVnode } from './index'\n\n// 创建真实的dom，将虚拟节点变成真实的节点。\nexport function createElm(vnode) {\n  let { tag, data, children, text } = vnode\n  if (typeof tag === 'string') {\n    //tag如果是标签\n    // 这里把虚拟节点和真实节点联系起来。\n    vnode.el = document.createElement(tag)\n    // 更新data中的属性。\n    patchProps(vnode.el, {}, data)\n    // 如果有children，就使用递归来循环创建children里面的内容\n    children.forEach((child) => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    // 如果是文本\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\n/**\n * 比较新旧节点的属性和样式，进行属性的赋值操作。\n * @param {*} el dom节点\n * @param {*} props 属性\n */\nexport function patchProps(el, oldProps = {}, props = {}) {\n  let oldStyles = oldProps.style || {}\n  let newStyles = props.style || {}\n  // 老的样式对象中有，新的样式对象中没有，要删除老的样式中的属性。\n  for (let key in oldStyles) {\n    if (!newStyles[key]) {\n      el.style[key] = ''\n    }\n  }\n  // 老的属性中有该属性。\n  for (let key in oldProps) {\n    // 新的属性中没有\n    if (!props[key]) {\n      // 则删除节点上的属性。\n      el.removeAttribute(key)\n    }\n  }\n  // 设置样式和属性。\n  for (let key in props) {\n    if (key === 'style') {\n      // style: {color: 'red'}\n      for (let styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n/**\n * 用于更新dom节点，比较虚拟节点。\n * @param {*} oldVnode 旧的dom节点\n * @param {*} vnode 新的dom节点\n */\nexport function patch(oldVnode, vnode) {\n  // 写的是初渲染流程\n  const isRealElement = oldVnode.nodeType\n  if (isRealElement) {\n    const elm = oldVnode\n    const parentElm = elm.parentNode //拿到父级元素。==> body\n    const newEle = createElm(vnode)\n    parentElm.insertBefore(newEle, elm.nextSibing)\n    parentElm.removeChild(elm)\n    return newEle\n  } else {\n    patchVnode(oldVnode, vnode)\n  }\n}\n/**\n * -----------------diff算法的核心所在-----------------\n * 比较新旧虚拟节点\n * @param {*} oldVnode 旧的虚拟节点\n * @param {*} vnode 新的虚拟节点\n * @returns 节点\n */\nfunction patchVnode(oldVnode, vnode) {\n  // 1. 先判断两个节点是否是同一个节点。如果是同一个节点就删除老节点，换上新的真实节点。\n  if (!isSameVnode(oldVnode, vnode)) {\n    // tag == tag, key == key\n    let el = createElm(vnode)\n    oldVnode.el.parentNode.replaceChild(el, oldVnode.el)\n    return el\n  }\n  // 2. 当两个节点是一个节点，比较两个节点的属性差异（复用老的节点，将新的属性添加上去。）\n  // 2.1 文本需要特殊处理, 比较一下文本的内容，复用老的节点。\n  let el = (vnode.el = oldVnode.el)\n  if (!oldVnode.tag) {\n    if (oldVnode.text !== vnode.text) {\n      el.textContent = vnode.text // 用新的文本覆盖掉老的文本\n    }\n  }\n  // 2.2 是标签时，我们需要比较标签的属性。\n  patchProps(el, oldVnode.data, vnode.data)\n\n  // 3. 比较儿子节点，一方有，一方没有儿子；或者两方都有儿子。\n  let oldChildren = oldVnode.children || []\n  let newChildren = vnode.children || []\n  // 3.1 两方都有儿子，需要比较儿子的差异。\n  if (oldChildren.length > 0 && newChildren.length > 0) {\n    // 完整的diff算法。\n    updateChildren(el, oldChildren, newChildren)\n  }\n  // 3.2新的有儿子，老的没有，挂载dom\n  else if (newChildren.length > 0) {\n    mountChildren(el, newChildren)\n  }\n  // 3.3老的有儿子，新的没有，删除\n  else if (oldChildren.length > 0) {\n    el.innerHTML = '' //也可以循环删除。\n  }\n  return el\n}\n\n// 给节点新增儿子dom\nfunction mountChildren(el, newChildren) {\n  for (let i = 0; i < newChildren.length; i++) {\n    let child = newChildren[i]\n    el.appendChild(createElm(child))\n  }\n}\n\n// ------------- diff算法的核心 ----------------\n// 对比儿子节点的差异\nfunction updateChildren(el, oldChildren, newChildren) {\n  // 我们为了比较两个儿子，增高性能，会使用一些性能优化。\n  // vue2中采用双指针的方式比较。\n  let oldStartIndex = 0,\n    newStartIndex = 0\n  let oldEndIndex = oldChildren.length - 1\n  let newEndIndex = newChildren.length - 1\n\n  let oldStartVnode = oldChildren[0]\n  let newStartVnode = newChildren[0]\n\n  let oldEndVnode = oldChildren[oldEndIndex]\n  let newEndVnode = newChildren[newEndIndex]\n\n  function makeIndexByKey(oldChildren) {\n    let map = {}\n    oldChildren.forEach((item, index) => {\n      map[item.key] = index\n    })\n    return map\n  }\n  let oldVnodeMap = makeIndexByKey(oldChildren)\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    // 比对方法，1）头和头比，2）头和尾比，3）交叉比对（尾和头比，尾和尾比）。4）乱序对比。\n    // 新旧节点双方，有一方 头指针，大于尾部指针，就停止循环。\n    // 首先判断节点为空的情况，如果为空，就跳过。\n    if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    } else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n    // 1. 从头开始比较，如果头指针相同，就比较下一个。\n    else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      // 如果是同一个节点，就递归比较儿子节点。\n      patchVnode(oldStartVnode, newStartVnode) // 比较儿子节点\n      oldStartVnode = oldChildren[++oldStartIndex]\n      newStartVnode = newChildren[++newStartIndex]\n    }\n\n    // 2. 从尾开始比较，如果尾指针相同，就比较下一个。\n    else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      // 如果是同一个节点，就递归比较儿子节点。\n      patchVnode(oldEndVnode, newEndVnode) // 比较儿子节点\n      oldEndVnode = oldChildren[--oldEndIndex]\n      newEndVnode = newChildren[--newEndIndex]\n    }\n\n    // 3. 交叉比较，尾和头比，尾和尾比。\n    // 3.1 旧节点的尾和新节点的头比较。\n    else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      patchVnode(oldEndVnode, newStartVnode)\n      // 将老的尾部节点移动到头部。这样后序只需要移动老节点的头部指针就可以了\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el)\n      oldEndVnode = oldChildren[--oldEndIndex]\n      newStartVnode = newChildren[++newStartIndex]\n    }\n    // 3.2 旧节点的头和新节点的尾比较。\n    else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      patchVnode(oldStartVnode, newEndVnode)\n      // 将老的头部节点移动到尾部节点的下一个节点之前就可以了。这样后序只需要移动老节点的尾部指针就可以了\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\n      oldStartVnode = oldChildren[++oldStartIndex]\n      newEndVnode = newChildren[--newEndIndex]\n    }\n    // 3.3 乱序比较\n    else {\n      // 在给动态列表添加key的时候，要避免使用索引，因为索引是从0开始的，可能会发生错误的复用。\n      // 根据老的节点制作一个映射关系表，用新的去找，找到则移动；找不到则创建新的节点，添加。最后多余的删除。\n      let moveIndex = oldVnodeMap[newStartVnode.key]\n      if (moveIndex !== undefined) {\n        let movevNode = oldChildren[index]\n        oldChildren[index] = undefined\n        el.insertBefore(movevNode.el, oldStartVnode.el)\n        patchVnode(movevNode, newStartVnode)\n      } else {\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n      }\n      newStartVnode = newChildren[++newStartIndex]\n    }\n  }\n  // 1. 如果新的节点比旧的节点长，就将多余的节点添加到旧的节点后面。\n  if (newStartIndex <= newEndIndex) {\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\n      let childEle = createElm(newChildren[i])\n      // 从头部循环和从尾部循环的插入方式不太一样，所以需要判断一下。\n      // 获取一下newStartVnode的下一个节点，如果没有，就是从头循环。如果有就是从尾循环。\n      let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null // 获取下一个节点。\n      // 需要理解的一点是anchor为空时，insetBefore会自动插入到最后。\n      el.insertBefore(childEle, anchor)\n    } \n  }\n  // 2. 如果新的节点比旧的节点短，就将旧的多余的节点删除。\n  if (oldStartIndex <= oldEndIndex) {\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n      if(oldChildren[i] !== undefined) {\n        el.removeChild(oldChildren[i].el)\n      }\n    }\n  }\n}\n","import Watch from './observe/watcher'\nimport { createElementVNode, createTextVNode } from './vdom'\nimport { patch } from './vdom/patch'\n\n/**\n * 但是现在有个问题，就是每次更新数据都需要手动的去执行_update和_render函数。\n * 为了解决这一问题，引入了观察者模式。为了节约性能，引入了diff算法。\n * @param {*} Vue\n */\nexport function initLifeCycle(Vue) {\n  // _update接收一个dom节点。把虚拟dom装为真实dom\n  Vue.prototype._update = function (vnode) {\n    // 将虚拟dom转换为真实dom\n    const vm = this\n    const el = vm.$el\n    // patch既有初始化的功能，又更新新的值\n    vm.$el = patch(el, vnode)\n  }\n\n  /**\n   * 底下的这些_c，_v, _s都是用来转换dom节点的。\n   */\n  // _c('div', {}, ...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n\n  // _v(text)\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n\n  //\n  Vue.prototype._s = function (value) {\n    if (typeof value != 'object') {\n      return value\n    }\n    return JSON.stringify(value)\n  }\n  // 创建虚拟dom\n  Vue.prototype._render = function () {\n    const vm = this\n    // 使用call让with中的this指向vm,并且执行函数\n    // console.log('options', vm.$options.render.call(vm))\n    return vm.$options.render.call(vm)\n  }\n}\n\nexport function mountComponent(vm, el) {\n  // 把el也挂宅到vm实例上\n  vm.$el = el\n  // 1. 调用render方法产生虚拟节点，虚拟DOM\n  // vm._render() = vm.$options.render() 虚拟节点\n  // vm._update就是把虚拟节点变成真实的节点。\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  // 启动观察者模式\n  new Watch(vm, updateComponent, true)\n  // 2. 根据虚拟DOM产生真是DOM\n\n  // 3. 插入到el元素中\n}\n\n// vue的核心：1。创建了响应式数据；2.html模版转换成ast语法树；\n// 3.将ast语法树转换为render函数；4.后续每次更新html只需要执行render函数（无需再次执行ast语法树），节省性能。\n// 重点：render函数会产生虚拟节点。（使用响应式数据）\n// 5. 根据生成的虚拟节点创建真是的dom\n\n// 调用钩子函数和生命周期\nexport function callHook(vm, hook) {\n  // 调用钩子函数\n  const handlers = vm.$options[hook]\n  if (handlers) {\n    handlers.forEach((handler) => handler.call(vm))\n  }\n}\n","import { initState } from './state'\nimport { compileToFunction } from './compiler/index.js'\nimport { callHook, mountComponent } from './lifecycle'\nimport { mergeOptions } from './utils'\n\n// 通过导出方法给vue添加方法\nexport function initMixin(Vue) {\n  // 1. 给vue添加一个用于初始化操作的_init方法\n  Vue.prototype._init = function (options) {\n    // vm.$options就是获取用户的配置\n    // 使用vue时的$nextTick()，$data， $attr等等，将用户的选项挂载到实例上\n    const vm = this\n    // 我们 定义的全局指令和过滤器。。。都会挂载到实例上。\n    // this.constructor.options拿到vue实例的options\n    vm.$options = mergeOptions(this.constructor.options, options)\n    // 生命周期beforeCreate\n    callHook(vm, 'beforeCreate');\n    // 初始化状态,挂载数据,计算属性。\n    initState(vm)\n    callHook(vm, 'created');\n\n    if (options.el) {\n      vm.$mount(options.el) //实现数据的挂载\n    }\n  }\n\n  /**\n   * 解析dom元素\n   * @param {*} el dom挂载点\n   */\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    el = document.querySelector(el)\n    let options = vm.$options\n    if (!options.render) {\n      //先看一下用户是否传入了render方法\n      let template\n      // 没有render看一下是否写了template,没写采用外部的template\n      if (!options.template && el) {\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = options.template //如果有el采用模板、\n        }\n      }\n      // 如果写了template就需要对模板进行编译，最终生成一个render函数。\n      if (template) {\n        const render = compileToFunction(template)\n        options.render = render // jsx最终会被编译成h('xxx')\n      }\n    }\n    // 最终可以获取到render方法。\n    mountComponent(vm, el) // 组件的挂载\n  }\n}\n","import { compileToFunction } from './compiler'\nimport { initGlobalAPI } from './gloableAPI'\nimport { initMixin } from './init'\nimport { initLifeCycle } from './lifecycle'\nimport { initStateMixin } from './state'\nimport { createElm, patch } from './vdom/patch'\n\n// 使用构造函数的方法创建Vue实例，将所有的方法都耦合起来。\nfunction Vue(options) {\n  // 这个_init函数在Vue的原型对象上。\n  this._init(options) //用户的配置\n}\n\n\ninitMixin(Vue) // 将initMixin方法添加到Vue的原型上\ninitLifeCycle(Vue) // vm_update vm._render\ninitGlobalAPI(Vue) // 初始化api——mixin，全局api\ninitStateMixin(Vue) // 实现了nextTick $watch\n\n// -------------------方便调试-----------\nlet render1 = compileToFunction(`<ul key='a' style=\"color:green\">\n  <li key=\"a\">a</li>\n  <li key=\"b\">b</li>\n  <li key=\"c\">c</li>\n  <li key=\"d\">d</li>\n</ul>`)\nlet vm1 = new Vue({data: {name: 'hzg'}})\nlet preVnode = render1.call(vm1)\n\n// 渲染到document上s\nlet el = createElm(preVnode)\ndocument.body.appendChild(el)\n\nlet render2 = compileToFunction(`<ul key='a' style=\"color:red;\">\n  <li key=\"b\">b</li>\n  <li key=\"m\">m</li>\n  <li key=\"a\">a</li>\n  <li key=\"p\">p</li>\n  <li key=\"c\">c</li>\n  <li key=\"d\">q</li>\n</ul>`)\nlet vm2 = new Vue({data: {name: 'demo'}})\nlet nextVnode = render2.call(vm2)\n\nsetTimeout(() => {\n  // 直接将老的替换新的，比较消耗性能；可以先比较两个节点的区别之后在进行比较。\n  // 而diff算法就就是一个平级比较。父亲比较父亲，儿子和儿子进行比较。\n  // let newEle = createElm(nextVnode)\n  // el.parentNode.replaceChild(newEle, el)\n  patch(preVnode, nextVnode)\n\n}, 1000);\n\nexport default Vue\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","endTag","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","strats","LIFECYCLE","hook","p","c","concat","mergeOptions","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","id","Watch","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","pushTarget","call","popTarget","dep","has","add","addSub","depend","queueWatcher","oldValue","newValue","queue","pending","flushScheduleQueue","flushQueue","run","watcher","setTimeout","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","nextTick","Dep","subs","target","addDep","update","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","val","current","childOb","set","newVal","initState","option","$options","initData","computed","initComputed","watch","initWatch","handler","handle","createWatcher","$watch","proxy","_data","computeds","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","expOrFn","createElementVNode","chidren","vNode","createTextVNode","isSameVnode","oldVnode","newVnode","createElm","vnode","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","isRealElement","nodeType","elm","parentElm","parentNode","newEle","insertBefore","nextSibing","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","oldVnodeMap","nextSibling","moveIndex","movevNode","childEle","anchor","initLifeCycle","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","render1","vm1","preVnode","body","render2","vm2","nextVnode"],"mappings":"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"}