{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observe {\n  constructor(data) {\n    // Object.defineProperty只能劫持已经存在的属性，不能劫持新增的属性（为此vue会新增一些方法例如：$set, $delete）\n    if (Array.isArray(data)) {\n      //  修改数组的每一项时进行修改，不管是基本数据类型，还是引用数据类型。\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n  // 遍历对象，对每一个属性进行劫持\n  walk(data) {\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key])\n    })\n  }\n  // 遍历数组，对每一项进行劫持\n  observeArray(data) {\n    data.forEach((item) => observe(item))\n  }\n}\n\n// 劫持数据，响应式数据， 这是一个闭包\nexport function defineReactive(target, key, val) {\n  // 如果val是对象，则递归调用，劫持对象。\n  observe(val)\n  // 对对象重新定义了。\n  Object.defineProperty(target, key, {\n    // 取值的时候\n    get() {\n      // console.log('用户取值了',key)\n      return val\n    },\n    // 设置或者修改值时执行\n    set(newVal) {\n      if (val !== newVal) {\n        // console.log('用户设置，修改了值')\n        // 对修改的对象属性进行劫持。\n        observe(newVal)\n        val = newVal\n      }\n    }\n  })\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n  if (typeof data !== 'object' || data === null) {\n    return //只对对象进行劫持\n  }\n  // 如果一个对象已经被劫持了，那么它就不需要再次被劫持。（判断方法是：添加一个实例，用实例来判断）\n  // 新增了Observer实例，判断这个对象是否已经被劫持\n  return new Observe(data)\n}\n","import { observe } from './observe/index'\n\nexport function initState(vm) {\n  const option = vm.$options\n  if (option.data) {\n    initData(vm)\n  }\n}\n\nfunction proxy(vm, target) {\n  // vm[target])===vm._data\n  Object.keys(vm[target]).forEach((key) => {\n    Object.defineProperty(vm, key, {\n      get() {\n        return vm[target][key]\n      },\n      set(newVal) {\n        vm[target][key] = newVal\n      }\n    })\n  })\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data\n  // data可能是函数\n  data = typeof data === 'function' ? data.call(this) : data\n\n  // 把返回的对象放到_data上。\n  vm._data = data\n  // 对vue2的数据进行劫持，采用一个api，defineProperty\n  observe(data)\n  // 将vm._data挂载到vm上,用vm来代理\n  proxy(vm, '_data')\n}\n","import { initState } from \"./state\"\n\n// 通过导出方法给vue添加方法 \nexport function initMixin(Vue) {\n  // 给vue添加一个用于初始化操作的_init方法\n  Vue.prototype._init = function (options) {\n    const vm = this\n    // 使用vue时的$nextTick()，$data等等，将用户的选项挂载到实例上\n    vm.$options = options\n    // 初始化状态\n    initState(vm)\n  }\n}\n","import { initMixin } from \"./init\"\n\n// 使用构造函数的方法创建Vue实例，将所有的方法都耦合起来。\nfunction Vue(options) {\n  // 这个_init函数在Vue的原型对象上。\n  this._init(options) //用户的配置\n}\n\ninitMixin(Vue) // 将initMixin方法添加到Vue的原型上\n\nexport default Vue\n\n"],"names":["Observe","data","Array","isArray","observeArray","walk","Object","keys","forEach","key","defineReactive","item","observe","target","val","defineProperty","get","set","newVal","initState","vm","option","$options","initData","proxy","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":"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"}